{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React from 'react';\nimport { canUseDOM, withDOM } from \"../../lib/dom\";\nimport { ConfigProviderContext, Scheme, defaultConfigProviderProps } from \"./ConfigProviderContext\";\nimport { VKCOM } from \"../../lib/platform\";\n\nvar ConfigProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConfigProvider, _React$Component);\n\n  var _super = _createSuper(ConfigProvider);\n\n  function ConfigProvider(props) {\n    var _this;\n\n    _classCallCheck(this, ConfigProvider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getScheme\", function (platform, scheme) {\n      return platform === VKCOM ? Scheme.VKCOM : _this.mapOldScheme(scheme);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setScheme\", function (scheme) {\n      if (scheme !== 'inherit') {\n        (_this.props.document || document).body.setAttribute('scheme', scheme);\n      }\n    });\n\n    if (canUseDOM) {\n      _this.setScheme(_this.getScheme(props.platform, props.scheme));\n    }\n\n    return _this;\n  } // Деструктуризация нужна из бага в react-docgen-typescript\n  // https://github.com/styleguidist/react-docgen-typescript/issues/195\n\n\n  _createClass(ConfigProvider, [{\n    key: \"mapOldScheme\",\n    value: function mapOldScheme(scheme) {\n      switch (scheme) {\n        case Scheme.DEPRECATED_CLIENT_LIGHT:\n          return Scheme.BRIGHT_LIGHT;\n\n        case Scheme.DEPRECATED_CLIENT_DARK:\n          return Scheme.SPACE_GRAY;\n\n        default:\n          return scheme;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.scheme !== this.props.scheme) {\n        this.setScheme(this.getScheme(this.props.platform, this.props.scheme));\n      }\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return {\n        isWebView: this.props.isWebView,\n        webviewType: this.props.webviewType,\n        scheme: this.getScheme(this.props.platform, this.props.scheme),\n        appearance: this.props.appearance,\n        app: this.props.app,\n        transitionMotionEnabled: this.props.transitionMotionEnabled,\n        platform: this.props.platform\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return createScopedElement(ConfigProviderContext.Provider, {\n        value: this.getContext()\n      }, this.props.children);\n    }\n  }]);\n\n  return ConfigProvider;\n}(React.Component);\n\n_defineProperty(ConfigProvider, \"defaultProps\", _objectSpread({}, defaultConfigProviderProps));\n\nexport default withDOM(ConfigProvider);","map":{"version":3,"sources":["../../../src/components/ConfigProvider/ConfigProvider.tsx"],"names":["ConfigProvider","React","Component","props","defaultConfigProviderProps","scheme","Scheme","platform","prevProps","isWebView","webviewType","appearance","app","transitionMotionEnabled","withDOM"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,EAAA,OAAA,QAAA,eAAA;AACA,SAAA,qBAAA,EAAA,MAAA,EAAA,0BAAA,QAAA,yBAAA;AAOA,SAAA,KAAA,QAAA,oBAAA;;IAUMA,c;;;;;AACJ,WAAA,cAAA,CAAA,KAAA,EAAwC;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA;;AACtC,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AADsC,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,WAAA,EAsB5B,UAAA,QAAA,EAAA,MAAA,EAAoE;AAC9E,aAAOO,QAAQ,KAARA,KAAAA,GAAqBD,MAAM,CAA3BC,KAAAA,GAAoC,KAAA,CAAA,YAAA,CAA3C,MAA2C,CAA3C;AAvBsC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,WAAA,EA0B5B,UAAA,MAAA,EAAoC;AAC9C,UAAIF,MAAM,KAAV,SAAA,EAA0B;AACxB,SAAC,KAAA,CAAA,KAAA,CAAA,QAAA,IAAD,QAAA,EAAA,IAAA,CAAA,YAAA,CAAA,QAAA,EAAA,MAAA;AACD;AA7BqC,KAAA,CAAA;;AAEtC,QAAA,SAAA,EAAe;AACb,MAAA,KAAA,CAAA,SAAA,CAAe,KAAA,CAAA,SAAA,CAAeF,KAAK,CAApB,QAAA,EAA+BA,KAAK,CAAnD,MAAe,CAAf;AACD;;AAJqC,WAAA,KAAA;IAOxC;AACA;;;;;iCAGaE,M,EAA4C;AACvD,cAAA,MAAA;AACE,aAAKC,MAAM,CAAX,uBAAA;AACE,iBAAOA,MAAM,CAAb,YAAA;;AACF,aAAKA,MAAM,CAAX,sBAAA;AACE,iBAAOA,MAAM,CAAb,UAAA;;AACF;AACE,iBAAA,MAAA;AANJ;AAQD;;;uCAYkBE,S,EAAgC;AACjD,UAAIA,SAAS,CAATA,MAAAA,KAAqB,KAAA,KAAA,CAAzB,MAAA,EAA4C;AAC1C,aAAA,SAAA,CAAe,KAAA,SAAA,CAAe,KAAA,KAAA,CAAf,QAAA,EAAoC,KAAA,KAAA,CAAnD,MAAe,CAAf;AACD;AACF;;;iCAEiC;AAChC,aAAO;AACLC,QAAAA,SAAS,EAAE,KAAA,KAAA,CADN,SAAA;AAELC,QAAAA,WAAW,EAAE,KAAA,KAAA,CAFR,WAAA;AAGLL,QAAAA,MAAM,EAAE,KAAA,SAAA,CAAe,KAAA,KAAA,CAAf,QAAA,EAAoC,KAAA,KAAA,CAHvC,MAGG,CAHH;AAILM,QAAAA,UAAU,EAAE,KAAA,KAAA,CAJP,UAAA;AAKLC,QAAAA,GAAG,EAAE,KAAA,KAAA,CALA,GAAA;AAMLC,QAAAA,uBAAuB,EAAE,KAAA,KAAA,CANpB,uBAAA;AAOLN,QAAAA,QAAQ,EAAE,KAAA,KAAA,CAAWA;AAPhB,OAAP;AASD;;;6BAEQ;AACP,aACE,mBAAA,CAAC,qBAAD,CAAA,QAAA,EAAA;AAAgC,QAAA,KAAK,EAAE,KAAA,UAAA;AAAvC,OAAA,EACG,KAAA,KAAA,CAFL,QACE,CADF;AAKD;;;;EAzD0BN,KAAK,CAACC,S;;gBAA7BF,c,oCAU8BI,0B;;AAkDpC,eAAeU,OAAO,CAAtB,cAAsB,CAAtB","sourcesContent":["import React, { ReactNode } from 'react';\nimport { canUseDOM, withDOM, DOMProps } from '../../lib/dom';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  Scheme,\n  AppearanceScheme,\n  defaultConfigProviderProps,\n} from './ConfigProviderContext';\nimport { Platform, VKCOM } from '../../lib/platform';\n\nexport interface ConfigProviderProps extends ConfigProviderContextInterface {\n  /**\n   * Цветовая схема приложения\n   */\n  scheme?: AppearanceScheme;\n  children?: ReactNode;\n}\n\nclass ConfigProvider extends React.Component<ConfigProviderProps & DOMProps> {\n  constructor(props: ConfigProviderProps) {\n    super(props);\n    if (canUseDOM) {\n      this.setScheme(this.getScheme(props.platform, props.scheme));\n    }\n  }\n\n  // Деструктуризация нужна из бага в react-docgen-typescript\n  // https://github.com/styleguidist/react-docgen-typescript/issues/195\n  public static defaultProps = { ...defaultConfigProviderProps };\n\n  mapOldScheme(scheme: AppearanceScheme): AppearanceScheme {\n    switch (scheme) {\n      case Scheme.DEPRECATED_CLIENT_LIGHT:\n        return Scheme.BRIGHT_LIGHT;\n      case Scheme.DEPRECATED_CLIENT_DARK:\n        return Scheme.SPACE_GRAY;\n      default:\n        return scheme;\n    }\n  }\n\n  getScheme = (platform: Platform, scheme: AppearanceScheme): AppearanceScheme => {\n    return platform === VKCOM ? Scheme.VKCOM : this.mapOldScheme(scheme);\n  };\n\n  setScheme = (scheme: AppearanceScheme): void => {\n    if (scheme !== 'inherit') {\n      (this.props.document || document).body.setAttribute('scheme', scheme);\n    }\n  };\n\n  componentDidUpdate(prevProps: ConfigProviderProps) {\n    if (prevProps.scheme !== this.props.scheme) {\n      this.setScheme(this.getScheme(this.props.platform, this.props.scheme));\n    }\n  }\n\n  getContext(): ConfigProviderProps {\n    return {\n      isWebView: this.props.isWebView,\n      webviewType: this.props.webviewType,\n      scheme: this.getScheme(this.props.platform, this.props.scheme),\n      appearance: this.props.appearance,\n      app: this.props.app,\n      transitionMotionEnabled: this.props.transitionMotionEnabled,\n      platform: this.props.platform,\n    };\n  }\n\n  render() {\n    return (\n      <ConfigProviderContext.Provider value={this.getContext()}>\n        {this.props.children}\n      </ConfigProviderContext.Provider>\n    );\n  }\n}\n\nexport default withDOM<ConfigProviderProps>(ConfigProvider);\n"]},"metadata":{},"sourceType":"module"}