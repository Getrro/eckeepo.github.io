{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { IOS } from \"../../lib/platform\";\n\nvar IconButton = function IconButton(_ref) {\n  var icon = _ref.icon,\n      sizeY = _ref.sizeY,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"icon\", \"sizeY\", \"children\"]);\n\n  var Component = restProps.href ? 'a' : 'button';\n  var platform = usePlatform();\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    Component: Component,\n    activeEffectDelay: 200,\n    activeMode: platform === IOS ? 'opacity' : 'IconButton--active',\n    vkuiClass: classNames(getClassName('IconButton', platform), \"IconButton--sizeY-\".concat(sizeY))\n  }), icon || children);\n};\n\nexport default withAdaptivity(IconButton, {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/IconButton/IconButton.tsx"],"names":["IconButton","icon","sizeY","children","restProps","Component","platform","usePlatform","classNames","getClassName","withAdaptivity"],"mappings":";;;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,cAAA,QAAA,0BAAA;AACA,SAAA,GAAA,QAAA,oBAAA;;AASA,IAAMA,UAA8C,GAAG,SAAjDA,UAAiD,CAAA,IAAA,EAKhC;AAAA,MAJrBC,IAIqB,GAAA,IAAA,CAJrBA,IAIqB;AAAA,MAHrBC,KAGqB,GAAA,IAAA,CAHrBA,KAGqB;AAAA,MAFrBC,QAEqB,GAAA,IAAA,CAFrBA,QAEqB;AAAA,MADlBC,SACkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;;AACrB,MAAMC,SAAS,GAAGD,SAAS,CAATA,IAAAA,GAAAA,GAAAA,GAAlB,QAAA;AACA,MAAME,QAAQ,GAAGC,WAAjB,EAAA;AAEA,SACE,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAFX,SAAA;AAGE,IAAA,iBAAiB,EAHnB,GAAA;AAIE,IAAA,UAAU,EAAED,QAAQ,KAARA,GAAAA,GAAAA,SAAAA,GAJd,oBAAA;AAKE,IAAA,SAAS,EAAEE,UAAU,CACnBC,YAAY,CAAA,YAAA,EADO,QACP,CADO,EAAA,qBAAA,MAAA,CAAA,KAAA,CAAA;AALvB,GAAA,CAAA,EAUGR,IAAI,IAXT,QACE,CADF;AATF,CAAA;;AAyBA,eAAeS,cAAc,CAAA,UAAA,EAAa;AACxCR,EAAAA,KAAK,EAAE;AADiC,CAAb,CAA7B","sourcesContent":["import { ReactNode, FunctionComponent } from 'react';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { withAdaptivity } from '../../hoc/withAdaptivity';\nimport { IOS } from '../../lib/platform';\n\nexport interface IconButtonProps extends TappableProps {\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте `children`\n   */\n  icon?: ReactNode;\n}\n\nconst IconButton: FunctionComponent<IconButtonProps> = ({\n  icon,\n  sizeY,\n  children,\n  ...restProps\n}: IconButtonProps) => {\n  const Component = restProps.href ? 'a' : 'button';\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={Component}\n      activeEffectDelay={200}\n      activeMode={platform === IOS ? 'opacity' : 'IconButton--active'}\n      vkuiClass={classNames(\n        getClassName('IconButton', platform),\n        `IconButton--sizeY-${sizeY}`,\n      )}\n    >\n      {icon || children}\n    </Tappable>\n  );\n};\n\nexport default withAdaptivity(IconButton, {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}