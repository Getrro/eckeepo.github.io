{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useCallback } from 'react';\nimport { Icon16Cancel } from '@vkontakte/icons';\nimport { getTitleFromChildren, hasReactNode, noop } from \"../../lib/utils\";\nimport Caption from \"../Typography/Caption/Caption\";\n\nvar Chip = function Chip(props) {\n  var value = props.value,\n      onRemove = props.onRemove,\n      removable = props.removable,\n      before = props.before,\n      after = props.after,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"value\", \"onRemove\", \"removable\", \"before\", \"after\", \"children\"]);\n\n  var onRemoveWrapper = useCallback(function (event) {\n    onRemove(event, value);\n  }, [onRemove, value]);\n  var title = getTitleFromChildren(children);\n  return createScopedElement(\"div\", _extends({\n    vkuiClass: \"Chip\"\n  }, restProps), createScopedElement(\"div\", {\n    vkuiClass: \"Chip__in\"\n  }, hasReactNode(before) && createScopedElement(\"div\", {\n    vkuiClass: \"Chip__before\"\n  }, before), createScopedElement(Caption, {\n    level: \"1\",\n    weight: \"regular\",\n    vkuiClass: \"Chip__content\",\n    title: title\n  }, children), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"Chip__after\"\n  }, after), removable && createScopedElement(\"div\", {\n    vkuiClass: \"Chip__remove\",\n    onClick: onRemoveWrapper\n  }, createScopedElement(Icon16Cancel, {\n    fill: \"var(--icon_secondary)\"\n  }))));\n};\n\nChip.defaultProps = {\n  removable: true,\n  before: null,\n  value: '',\n  onRemove: noop\n};\nexport default Chip;","map":{"version":3,"sources":["../../../src/components/Chip/Chip.tsx"],"names":["Chip","value","onRemove","removable","before","after","children","restProps","props","onRemoveWrapper","useCallback","title","getTitleFromChildren","hasReactNode","noop"],"mappings":";;;AAAA,SAAA,WAAA,QAAA,OAAA;AACA,SAAA,YAAA,QAAA,kBAAA;AACA,SAAA,oBAAA,EAAA,YAAA,EAAA,IAAA,QAAA,iBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;;AAYA,IAAMA,IAAmB,GAAG,SAAtBA,IAAsB,CAAA,KAAA,EAAsB;AAAA,MACxCC,KADwC,GAC8BO,KAD9B,CAAA,KAAA;AAAA,MACjCN,QADiC,GAC8BM,KAD9B,CAAA,QAAA;AAAA,MACvBL,SADuB,GAC8BK,KAD9B,CAAA,SAAA;AAAA,MACZJ,MADY,GAC8BI,KAD9B,CAAA,MAAA;AAAA,MACJH,KADI,GAC8BG,KAD9B,CAAA,KAAA;AAAA,MACGF,QADH,GAC8BE,KAD9B,CAAA,QAAA;AAAA,MACgBD,SADhB,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;;AAEhD,MAAME,eAAe,GAAGC,WAAW,CAAC,UAAA,KAAA,EAAuB;AACzDR,IAAAA,QAAQ,CAAA,KAAA,EAARA,KAAQ,CAARA;AADiC,GAAA,EAEhC,CAAA,QAAA,EAFH,KAEG,CAFgC,CAAnC;AAGA,MAAMS,KAAK,GAAGC,oBAAoB,CAAlC,QAAkC,CAAlC;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,SAAA,CAAA,EACE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGC,YAAY,CAAZA,MAAY,CAAZA,IAAwB,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAD3B,MAC2B,CAD3B,EAEE,mBAAA,CAAA,OAAA,EAAA;AAAS,IAAA,KAAK,EAAd,GAAA;AAAmB,IAAA,MAAM,EAAzB,SAAA;AAAoC,IAAA,SAAS,EAA7C,eAAA;AAA8D,IAAA,KAAK,EAAEF;AAArE,GAAA,EAFF,QAEE,CAFF,EAGGE,YAAY,CAAZA,KAAY,CAAZA,IAAuB,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAH1B,KAG0B,CAH1B,EAIGV,SAAS,IACR,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,cAAA;AAA8B,IAAA,OAAO,EAAEM;AAAvC,GAAA,EACE,mBAAA,CAAA,YAAA,EAAA;AAAc,IAAA,IAAI,EAAC;AAAnB,GAAA,CADF,CALJ,CADF,CADF;AAPF,CAAA;;AAuBAT,IAAI,CAAJA,YAAAA,GAAoB;AAClBG,EAAAA,SAAS,EADS,IAAA;AAElBC,EAAAA,MAAM,EAFY,IAAA;AAGlBH,EAAAA,KAAK,EAHa,EAAA;AAIlBC,EAAAA,QAAQ,EAAEY;AAJQ,CAApBd;AAOA,eAAA,IAAA","sourcesContent":["import { FC, HTMLAttributes, ReactNode, useCallback, MouseEvent } from 'react';\nimport { Icon16Cancel } from '@vkontakte/icons';\nimport { getTitleFromChildren, hasReactNode, noop } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\n\ntype ChipValue = string | number;\n\nexport interface ChipProps extends HTMLAttributes<HTMLDivElement> {\n  value: ChipValue;\n  onRemove?: (event?: MouseEvent, value?: ChipValue) => void;\n  removable?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nconst Chip: FC<ChipProps> = (props: ChipProps) => {\n  const { value, onRemove, removable, before, after, children, ...restProps } = props;\n  const onRemoveWrapper = useCallback((event: MouseEvent) => {\n    onRemove(event, value);\n  }, [onRemove, value]);\n  const title = getTitleFromChildren(children);\n\n  return (\n    <div vkuiClass=\"Chip\" {...restProps}>\n      <div vkuiClass=\"Chip__in\">\n        {hasReactNode(before) && <div vkuiClass=\"Chip__before\">{before}</div>}\n        <Caption level=\"1\" weight=\"regular\" vkuiClass=\"Chip__content\" title={title}>{children}</Caption>\n        {hasReactNode(after) && <div vkuiClass=\"Chip__after\">{after}</div>}\n        {removable &&\n          <div vkuiClass=\"Chip__remove\" onClick={onRemoveWrapper}>\n            <Icon16Cancel fill=\"var(--icon_secondary)\" />\n          </div>\n        }\n      </div>\n    </div>\n  );\n};\n\nChip.defaultProps = {\n  removable: true,\n  before: null,\n  value: '',\n  onRemove: noop,\n};\n\nexport default Chip;\n"]},"metadata":{},"sourceType":"module"}